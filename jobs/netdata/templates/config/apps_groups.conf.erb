#
# apps.plugin process grouping
#
# The apps.plugin displays charts with information about the processes running.
# This config allows grouping processes together, so that several processes
# will be reported together.
#
# Only groups in this file are reported. All other processes will be reported
# as 'other'.
#
# For each process given, its whole process tree will be grouped, not just
# the process matched. The plugin will include both parents and childs.
#
# The format is:
#
# group_name: process1 process2 process3 ...
#
# The process names are the same to the ones returned by: ps -e
# or /proc/PID/stat
#
# To add process names with spaces, enclose them in quotes (single or double)
# example: 'Plex Media Serv' "my other process"
#
# Wildcard support:
# You can add an asterisk (*) at the beginning and/or the end of a process name:
#  *name    suffix mode: will search for processes ending with 'name' (/proc/PID/stat)
#   name*   prefix mode: will search for processes beginning with 'name' (/proc/PID/stat)
#  *name*   substring mode: will search for 'name' in the whole command line (/proc/PID/cmdline)
#
# If you enter even just one *name* (substring), apps.plugin will process
# /proc/PID/cmdline for all processes, on every iteration.
#
# To add process names with single quotes, enclose them in double quotes
# example: "process with this ' single quote"
#
# To add process names with double quotes, enclose them in single quotes:
# example: 'process with this " double quote'
#
# If a group name starts with a -, the dimension will be hidden (cpu chart only)
#
# If any process name starts with a +, debugging will be enabled for it
# (debugging produces a lot of output - do not enable it in production systems)
#
# You can add any number of groups you like. Only the ones found running will
# affect the charts generated. However, producing charts with hundreds of
# dimensions may slow down your web browser.

netdata: netdata
<% p("netdata.apps", []).each do |app| %>
<%= app %>
<% end %>